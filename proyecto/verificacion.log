2024-12-12 18:23:08,418 - INFO - Ejecutando tests...
2024-12-12 18:23:08,899 - INFO - Resultado de los tests:
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Día: lunes, Estado: Disponible, Fila: 1, Asiento: 1, Precio: €0.00, Edad: 0, Descuentos: Sin descuentos
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.

2024-12-12 18:23:08,899 - ERROR - Algunos tests fallaron:
..............EEEEEE..............FEEFEF...F....
======================================================================
ERROR: test_agregar_asiento (test_main.TestMain.test_agregar_asiento)
Prueba la opción de agregar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 24, in test_agregar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_cancelar_reserva (test_main.TestMain.test_cancelar_reserva)
Prueba la opción de cancelar reserva en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 42, in test_cancelar_reserva
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_mostrar_asientos (test_main.TestMain.test_mostrar_asientos)
Prueba la opción de mostrar asientos en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 51, in test_mostrar_asientos
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reporte_disponibilidad (test_main.TestMain.test_reporte_disponibilidad)
Prueba la opción de generar reporte de disponibilidad en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 60, in test_reporte_disponibilidad
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reservar_asiento (test_main.TestMain.test_reservar_asiento)
Prueba la opción de reservar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 33, in test_reservar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reset_estado (test_main.TestMain.test_reset_estado)
Prueba la opción de resetear estado en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 69, in test_reset_estado
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
FAIL: test_agregar_asiento (test_utilidades.TestMain.test_agregar_asiento)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 123, in test_agregar_asiento
    mock_print.assert_any_call("Asiento 1 en fila 1 para el día lunes agregado correctamente.")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Asiento 1 en fila 1 para el día lunes agregado correctamente.') call not found

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestMain.test_reporte_disponibilidad)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 147, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 0 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 0 asientos disponibles para reservar') call not found

======================================================================
FAIL: test_reset_estado (test_utilidades.TestMain.test_reset_estado)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 153, in test_reset_estado
    mock_print.assert_any_call("Estado reseteado correctamente.")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Estado reseteado correctamente.') call not found

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestUtilidades.test_reporte_disponibilidad)
Prueba la función reporte_disponibilidad.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 109, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar') call not found

----------------------------------------------------------------------
Ran 48 tests in 0.111s

FAILED (failures=4, errors=9)

2024-12-12 18:23:08,912 - INFO - Revisando debug.log...
2024-12-12 18:23:08,913 - INFO - debug.log no contiene errores inesperados.
2024-12-12 18:23:08,913 - INFO - Ejecutando el programa para pruebas manuales...
2024-12-12 18:31:02,072 - INFO - Ejecutando tests...
2024-12-12 18:31:02,599 - INFO - Resultado de los tests:
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Día: lunes, Estado: Disponible, Fila: 1, Asiento: 1, Precio: €0.00, Edad: 0, Descuentos: Sin descuentos
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.

2024-12-12 18:31:02,599 - ERROR - Algunos tests fallaron:
..............EEEEEE..............FEEFEF...F....
======================================================================
ERROR: test_agregar_asiento (test_main.TestMain.test_agregar_asiento)
Prueba la opción de agregar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 24, in test_agregar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_cancelar_reserva (test_main.TestMain.test_cancelar_reserva)
Prueba la opción de cancelar reserva en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 42, in test_cancelar_reserva
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_mostrar_asientos (test_main.TestMain.test_mostrar_asientos)
Prueba la opción de mostrar asientos en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 51, in test_mostrar_asientos
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reporte_disponibilidad (test_main.TestMain.test_reporte_disponibilidad)
Prueba la opción de generar reporte de disponibilidad en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 60, in test_reporte_disponibilidad
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reservar_asiento (test_main.TestMain.test_reservar_asiento)
Prueba la opción de reservar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 33, in test_reservar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reset_estado (test_main.TestMain.test_reset_estado)
Prueba la opción de resetear estado en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 69, in test_reset_estado
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
FAIL: test_agregar_asiento (test_utilidades.TestMain.test_agregar_asiento)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 123, in test_agregar_asiento
    mock_print.assert_any_call("Asiento 1 en fila 1 para el día lunes agregado correctamente.")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Asiento 1 en fila 1 para el día lunes agregado correctamente.') call not found

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestMain.test_reporte_disponibilidad)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 147, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 0 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 0 asientos disponibles para reservar') call not found

======================================================================
FAIL: test_reset_estado (test_utilidades.TestMain.test_reset_estado)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 153, in test_reset_estado
    mock_print.assert_any_call("Estado reseteado correctamente.")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Estado reseteado correctamente.') call not found

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestUtilidades.test_reporte_disponibilidad)
Prueba la función reporte_disponibilidad.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 109, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar') call not found

----------------------------------------------------------------------
Ran 48 tests in 0.111s

FAILED (failures=4, errors=9)

2024-12-12 18:31:02,599 - INFO - Revisando debug.log...
2024-12-12 18:31:02,600 - INFO - debug.log no contiene errores inesperados.
2024-12-12 18:31:02,600 - INFO - Ejecutando el programa para pruebas manuales...
2024-12-12 18:36:16,652 - INFO - Salida del programa:
Estado de la sala cargado correctamente.
¡Bienvenido al Sistema de Reservas para un Cine!
Las filas van del 1 al 10 y los asientos de cada fila van del 1 al 20.
Recuerda que los miércoles hay un 20% de descuento y los mayores de 65 años tienen un 30% de descuento adicional.

Opciones:
1. Agregar asiento
2. Reservar asiento
3. Cancelar reserva
4. Mostrar todos los asientos
5. Generar reporte de disponibilidad
6. Resetear estado
7. Salir
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.

2024-12-12 18:36:16,652 - ERROR - El programa encontró errores:
Traceback (most recent call last):
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 93, in <module>
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 55, in validar_entrada
    raise ValueError("Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.")
ValueError: Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.

2024-12-12 18:36:16,652 - INFO - Verificación completa.
2024-12-12 18:38:20,291 - INFO - Ejecutando tests...
2024-12-12 18:38:20,751 - INFO - Resultado de los tests:
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Día: lunes, Estado: Disponible, Fila: 1, Asiento: 1, Precio: €0.00, Edad: 0, Descuentos: Sin descuentos
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.

2024-12-12 18:38:20,751 - ERROR - Algunos tests fallaron:
..............EEEEEE..............FEEFEF...F....
======================================================================
ERROR: test_agregar_asiento (test_main.TestMain.test_agregar_asiento)
Prueba la opción de agregar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 24, in test_agregar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_cancelar_reserva (test_main.TestMain.test_cancelar_reserva)
Prueba la opción de cancelar reserva en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 42, in test_cancelar_reserva
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_mostrar_asientos (test_main.TestMain.test_mostrar_asientos)
Prueba la opción de mostrar asientos en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 51, in test_mostrar_asientos
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reporte_disponibilidad (test_main.TestMain.test_reporte_disponibilidad)
Prueba la opción de generar reporte de disponibilidad en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 60, in test_reporte_disponibilidad
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reservar_asiento (test_main.TestMain.test_reservar_asiento)
Prueba la opción de reservar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 33, in test_reservar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reset_estado (test_main.TestMain.test_reset_estado)
Prueba la opción de resetear estado en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 69, in test_reset_estado
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
FAIL: test_agregar_asiento (test_utilidades.TestMain.test_agregar_asiento)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 123, in test_agregar_asiento
    mock_print.assert_any_call("Asiento 1 en fila 1 para el día lunes agregado correctamente.")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Asiento 1 en fila 1 para el día lunes agregado correctamente.') call not found

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestMain.test_reporte_disponibilidad)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 147, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 0 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 0 asientos disponibles para reservar') call not found

======================================================================
FAIL: test_reset_estado (test_utilidades.TestMain.test_reset_estado)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 153, in test_reset_estado
    mock_print.assert_any_call("Estado reseteado correctamente.")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Estado reseteado correctamente.') call not found

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestUtilidades.test_reporte_disponibilidad)
Prueba la función reporte_disponibilidad.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 109, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar') call not found

----------------------------------------------------------------------
Ran 48 tests in 0.137s

FAILED (failures=4, errors=9)

2024-12-12 18:38:20,751 - INFO - Revisando debug.log...
2024-12-12 18:38:20,752 - INFO - debug.log no contiene errores inesperados.
2024-12-12 18:38:20,752 - INFO - Ejecutando el programa para pruebas manuales...
2024-12-12 18:39:52,428 - INFO - Salida del programa:
Estado de la sala cargado correctamente.
¡Bienvenido al Sistema de Reservas para un Cine!
Las filas van del 1 al 10 y los asientos de cada fila van del 1 al 20.
Recuerda que los miércoles hay un 20% de descuento y los mayores de 65 años tienen un 30% de descuento adicional.

Opciones:
1. Agregar asiento
2. Reservar asiento
3. Cancelar reserva
4. Mostrar todos los asientos
5. Generar reporte de disponibilidad
6. Resetear estado
7. Salir
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.

2024-12-12 18:39:52,429 - ERROR - El programa encontró errores:
Traceback (most recent call last):
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 93, in <module>
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 55, in validar_entrada
    raise ValueError("Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.")
ValueError: Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.

2024-12-12 18:39:52,429 - INFO - Verificación completa.
2024-12-12 21:43:22,490 - INFO - Ejecutando tests...
2024-12-12 21:43:23,388 - INFO - Resultado de los tests:
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Día: lunes, Estado: Disponible, Fila: 1, Asiento: 1, Precio: €0.00, Edad: 0, Descuentos: Sin descuentos
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.

2024-12-12 21:43:23,395 - ERROR - Algunos tests fallaron:
..............EEEEEE..............FEEFEF...F....
======================================================================
ERROR: test_agregar_asiento (test_main.TestMain.test_agregar_asiento)
Prueba la opción de agregar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 24, in test_agregar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_cancelar_reserva (test_main.TestMain.test_cancelar_reserva)
Prueba la opción de cancelar reserva en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 42, in test_cancelar_reserva
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_mostrar_asientos (test_main.TestMain.test_mostrar_asientos)
Prueba la opción de mostrar asientos en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 51, in test_mostrar_asientos
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reporte_disponibilidad (test_main.TestMain.test_reporte_disponibilidad)
Prueba la opción de generar reporte de disponibilidad en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 60, in test_reporte_disponibilidad
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reservar_asiento (test_main.TestMain.test_reservar_asiento)
Prueba la opción de reservar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 33, in test_reservar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reset_estado (test_main.TestMain.test_reset_estado)
Prueba la opción de resetear estado en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 69, in test_reset_estado
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
FAIL: test_agregar_asiento (test_utilidades.TestMain.test_agregar_asiento)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 123, in test_agregar_asiento
    mock_print.assert_any_call("Asiento 1 en fila 1 para el día lunes agregado correctamente.")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Asiento 1 en fila 1 para el día lunes agregado correctamente.') call not found

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestMain.test_reporte_disponibilidad)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 147, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 0 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 0 asientos disponibles para reservar') call not found

======================================================================
FAIL: test_reset_estado (test_utilidades.TestMain.test_reset_estado)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 153, in test_reset_estado
    mock_print.assert_any_call("Estado reseteado correctamente.")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Estado reseteado correctamente.') call not found

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestUtilidades.test_reporte_disponibilidad)
Prueba la función reporte_disponibilidad.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 109, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar') call not found

----------------------------------------------------------------------
Ran 48 tests in 0.133s

FAILED (failures=4, errors=9)

2024-12-12 21:43:23,396 - INFO - Revisando debug.log...
2024-12-12 21:43:23,396 - INFO - debug.log no contiene errores inesperados.
2024-12-12 21:43:23,396 - INFO - Ejecutando el programa para pruebas manuales...
2024-12-12 21:44:39,818 - INFO - Salida del programa:
Estado de la sala cargado correctamente.
¡Bienvenido al Sistema de Reservas para un Cine!
Las filas van del 1 al 10 y los asientos de cada fila van del 1 al 20.
Recuerda que los miércoles hay un 20% de descuento y los mayores de 65 años tienen un 30% de descuento adicional.

Opciones:
1. Agregar asiento
2. Reservar asiento
3. Cancelar reserva
4. Mostrar todos los asientos
5. Generar reporte de disponibilidad
6. Resetear estado
7. Salir
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.

2024-12-12 21:44:39,818 - ERROR - El programa encontró errores:
Traceback (most recent call last):
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 93, in <module>
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 55, in validar_entrada
    raise ValueError("Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.")
ValueError: Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.

2024-12-12 21:44:39,818 - INFO - Verificación completa.
2024-12-12 21:47:55,099 - INFO - Ejecutando tests...
2024-12-12 21:47:55,570 - INFO - Resultado de los tests:
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Día: lunes, Estado: Disponible, Fila: 1, Asiento: 1, Precio: €0.00, Edad: 0, Descuentos: Sin descuentos
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.

2024-12-12 21:47:55,570 - ERROR - Algunos tests fallaron:
..............EEEEEE..............FEEFEF...F....
======================================================================
ERROR: test_agregar_asiento (test_main.TestMain.test_agregar_asiento)
Prueba la opción de agregar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 24, in test_agregar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_cancelar_reserva (test_main.TestMain.test_cancelar_reserva)
Prueba la opción de cancelar reserva en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 42, in test_cancelar_reserva
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_mostrar_asientos (test_main.TestMain.test_mostrar_asientos)
Prueba la opción de mostrar asientos en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 51, in test_mostrar_asientos
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reporte_disponibilidad (test_main.TestMain.test_reporte_disponibilidad)
Prueba la opción de generar reporte de disponibilidad en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 60, in test_reporte_disponibilidad
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reservar_asiento (test_main.TestMain.test_reservar_asiento)
Prueba la opción de reservar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 33, in test_reservar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reset_estado (test_main.TestMain.test_reset_estado)
Prueba la opción de resetear estado en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 69, in test_reset_estado
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
FAIL: test_agregar_asiento (test_utilidades.TestMain.test_agregar_asiento)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 123, in test_agregar_asiento
    mock_print.assert_any_call("Asiento 1 en fila 1 para el día lunes agregado correctamente.")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Asiento 1 en fila 1 para el día lunes agregado correctamente.') call not found

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestMain.test_reporte_disponibilidad)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 147, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 0 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 0 asientos disponibles para reservar') call not found

======================================================================
FAIL: test_reset_estado (test_utilidades.TestMain.test_reset_estado)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 153, in test_reset_estado
    mock_print.assert_any_call("Estado reseteado correctamente.")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Estado reseteado correctamente.') call not found

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestUtilidades.test_reporte_disponibilidad)
Prueba la función reporte_disponibilidad.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 109, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar') call not found

----------------------------------------------------------------------
Ran 48 tests in 0.119s

FAILED (failures=4, errors=9)

2024-12-12 21:47:56,571 - INFO - Revisando debug.log...
2024-12-12 21:47:56,572 - INFO - debug.log no contiene errores inesperados.
2024-12-12 21:47:57,573 - INFO - Ejecutando el programa para pruebas manuales...
2024-12-12 21:54:31,447 - INFO - Salida del programa:
Estado de la sala cargado correctamente.
¡Bienvenido al Sistema de Reservas para un Cine!
Las filas van del 1 al 10 y los asientos de cada fila van del 1 al 20.
Recuerda que los miércoles hay un 20% de descuento y los mayores de 65 años tienen un 30% de descuento adicional.

Opciones:
1. Agregar asiento
2. Reservar asiento
3. Cancelar reserva
4. Mostrar todos los asientos
5. Generar reporte de disponibilidad
6. Resetear estado
7. Salir
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.

2024-12-12 21:54:31,447 - ERROR - El programa encontró errores:
Traceback (most recent call last):
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 93, in <module>
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 55, in validar_entrada
    raise ValueError("Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.")
ValueError: Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.

2024-12-12 21:54:32,448 - INFO - Verificación completa.
2024-12-12 21:58:30,188 - INFO - Ejecutando tests...
2024-12-12 21:58:30,748 - INFO - Resultado de los tests:
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Día: lunes, Estado: Disponible, Fila: 1, Asiento: 1, Precio: €0.00, Edad: 0, Descuentos: Sin descuentos
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.

2024-12-12 21:58:30,748 - ERROR - Algunos tests fallaron:
..............EEEEEE................F....
======================================================================
ERROR: test_agregar_asiento (test_main.TestMain.test_agregar_asiento)
Prueba la opción de agregar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 24, in test_agregar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_cancelar_reserva (test_main.TestMain.test_cancelar_reserva)
Prueba la opción de cancelar reserva en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 42, in test_cancelar_reserva
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_mostrar_asientos (test_main.TestMain.test_mostrar_asientos)
Prueba la opción de mostrar asientos en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 51, in test_mostrar_asientos
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reporte_disponibilidad (test_main.TestMain.test_reporte_disponibilidad)
Prueba la opción de generar reporte de disponibilidad en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 60, in test_reporte_disponibilidad
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reservar_asiento (test_main.TestMain.test_reservar_asiento)
Prueba la opción de reservar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 33, in test_reservar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reset_estado (test_main.TestMain.test_reset_estado)
Prueba la opción de resetear estado en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 69, in test_reset_estado
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestUtilidades.test_reporte_disponibilidad)
Prueba la función reporte_disponibilidad.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 105, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar') call not found

----------------------------------------------------------------------
Ran 41 tests in 0.087s

FAILED (failures=1, errors=6)

2024-12-12 21:58:31,748 - INFO - Revisando debug.log...
2024-12-12 21:58:31,749 - INFO - debug.log no contiene errores inesperados.
2024-12-12 21:58:32,750 - INFO - Ejecutando el programa para pruebas manuales...
2024-12-12 22:01:10,841 - INFO - Salida del programa:
Estado de la sala cargado correctamente.
¡Bienvenido al Sistema de Reservas para un Cine!
Las filas van del 1 al 10 y los asientos de cada fila van del 1 al 20.
Recuerda que los miércoles hay un 20% de descuento y los mayores de 65 años tienen un 30% de descuento adicional.

Opciones:
1. Agregar asiento
2. Reservar asiento
3. Cancelar reserva
4. Mostrar todos los asientos
5. Generar reporte de disponibilidad
6. Resetear estado
7. Salir
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.

2024-12-12 22:01:10,841 - ERROR - El programa encontró errores:
Traceback (most recent call last):
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 93, in <module>
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 55, in validar_entrada
    raise ValueError("Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.")
ValueError: Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.

2024-12-12 22:01:11,843 - INFO - Verificación completa.
2024-12-12 22:14:29,270 - INFO - Ejecutando tests...
2024-12-12 22:14:29,746 - INFO - Resultado de los tests:
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Día: lunes, Estado: Disponible, Fila: 1, Asiento: 1, Precio: €0.00, Edad: 0, Descuentos: Sin descuentos
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.

2024-12-12 22:14:29,746 - ERROR - Algunos tests fallaron:
..............EEEEEE................F....
======================================================================
ERROR: test_agregar_asiento (test_main.TestMain.test_agregar_asiento)
Prueba la opción de agregar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 24, in test_agregar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_cancelar_reserva (test_main.TestMain.test_cancelar_reserva)
Prueba la opción de cancelar reserva en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 42, in test_cancelar_reserva
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_mostrar_asientos (test_main.TestMain.test_mostrar_asientos)
Prueba la opción de mostrar asientos en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 51, in test_mostrar_asientos
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reporte_disponibilidad (test_main.TestMain.test_reporte_disponibilidad)
Prueba la opción de generar reporte de disponibilidad en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 60, in test_reporte_disponibilidad
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reservar_asiento (test_main.TestMain.test_reservar_asiento)
Prueba la opción de reservar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 33, in test_reservar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reset_estado (test_main.TestMain.test_reset_estado)
Prueba la opción de resetear estado en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 69, in test_reset_estado
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestUtilidades.test_reporte_disponibilidad)
Prueba la función reporte_disponibilidad.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 105, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar') call not found

----------------------------------------------------------------------
Ran 41 tests in 0.087s

FAILED (failures=1, errors=6)

2024-12-12 22:14:30,747 - INFO - Revisando debug.log...
2024-12-12 22:14:30,748 - INFO - debug.log no contiene errores inesperados.
2024-12-12 22:14:31,749 - INFO - Ejecutando el programa para pruebas manuales...
2024-12-12 22:20:40,542 - INFO - Salida del programa:
Estado de la sala cargado correctamente.
¡Bienvenido al Sistema de Reservas para un Cine!
Las filas van del 1 al 10 y los asientos de cada fila van del 1 al 20.
Recuerda que los miércoles hay un 20% de descuento y los mayores de 65 años tienen un 30% de descuento adicional.

Opciones:
1. Agregar asiento
2. Reservar asiento
3. Cancelar reserva
4. Mostrar todos los asientos
5. Generar reporte de disponibilidad
6. Resetear estado
7. Salir
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.

2024-12-12 22:20:40,542 - ERROR - El programa encontró errores:
Traceback (most recent call last):
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 93, in <module>
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 55, in validar_entrada
    raise ValueError("Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.")
ValueError: Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.

2024-12-12 22:20:41,543 - INFO - Verificación completa.
2024-12-12 22:24:03,101 - INFO - Ejecutando tests...
2024-12-12 22:24:03,675 - INFO - Resultado de los tests:
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Día: lunes, Estado: Disponible, Fila: 1, Asiento: 1, Precio: €0.00, Edad: 0, Descuentos: Sin descuentos
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.

2024-12-12 22:24:03,675 - ERROR - Algunos tests fallaron:
..............EEEEEE................F....
======================================================================
ERROR: test_agregar_asiento (test_main.TestMain.test_agregar_asiento)
Prueba la opción de agregar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 24, in test_agregar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_cancelar_reserva (test_main.TestMain.test_cancelar_reserva)
Prueba la opción de cancelar reserva en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 42, in test_cancelar_reserva
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_mostrar_asientos (test_main.TestMain.test_mostrar_asientos)
Prueba la opción de mostrar asientos en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 51, in test_mostrar_asientos
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reporte_disponibilidad (test_main.TestMain.test_reporte_disponibilidad)
Prueba la opción de generar reporte de disponibilidad en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 60, in test_reporte_disponibilidad
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reservar_asiento (test_main.TestMain.test_reservar_asiento)
Prueba la opción de reservar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 33, in test_reservar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reset_estado (test_main.TestMain.test_reset_estado)
Prueba la opción de resetear estado en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 69, in test_reset_estado
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestUtilidades.test_reporte_disponibilidad)
Prueba la función reporte_disponibilidad.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 105, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar') call not found

----------------------------------------------------------------------
Ran 41 tests in 0.087s

FAILED (failures=1, errors=6)

2024-12-12 22:14:30,747 - INFO - Revisando debug.log...
2024-12-12 22:14:30,748 - INFO - debug.log no contiene errores inesperados.
2024-12-12 22:14:31,749 - INFO - Ejecutando el programa para pruebas manuales...
2024-12-12 22:20:40,542 - INFO - Salida del programa:
Estado de la sala cargado correctamente.
¡Bienvenido al Sistema de Reservas para un Cine!
Las filas van del 1 al 10 y los asientos de cada fila van del 1 al 20.
Recuerda que los miércoles hay un 20% de descuento y los mayores de 65 años tienen un 30% de descuento adicional.

Opciones:
1. Agregar asiento
2. Reservar asiento
3. Cancelar reserva
4. Mostrar todos los asientos
5. Generar reporte de disponibilidad
6. Resetear estado
7. Salir
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.
Seleccione una opción (1-7): Entrada inválida. Por favor, ingrese un int válido.

2024-12-12 22:20:40,542 - ERROR - El programa encontró errores:
Traceback (most recent call last):
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 93, in <module>
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 55, in validar_entrada
    raise ValueError("Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.")
ValueError: Número máximo de intentos alcanzado. Por favor, intente de nuevo más tarde.

2024-12-12 22:20:41,543 - INFO - Verificación completa.
2024-12-12 22:24:03,101 - INFO - Ejecutando tests...
2024-12-12 22:24:03,675 - INFO - Resultado de los tests:
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Día: lunes, Estado: Disponible, Fila: 1, Asiento: 1, Precio: €0.00, Edad: 0, Descuentos: Sin descuentos
Descuentos aplicados: 30% de descuento para mayores de 65 años
Precio final: €7.00
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Entrada inválida. Por favor, ingrese un int válido.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.
Opción inválida. Las opciones válidas son: si, no.

2024-12-12 22:24:03,675 - ERROR - Algunos tests fallaron:
..............EEEEEE................F....
======================================================================
ERROR: test_agregar_asiento (test_main.TestMain.test_agregar_asiento)
Prueba la opción de agregar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 24, in test_agregar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_cancelar_reserva (test_main.TestMain.test_cancelar_reserva)
Prueba la opción de cancelar reserva en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 42, in test_cancelar_reserva
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_mostrar_asientos (test_main.TestMain.test_mostrar_asientos)
Prueba la opción de mostrar asientos en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 51, in test_mostrar_asientos
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reporte_disponibilidad (test_main.TestMain.test_reporte_disponibilidad)
Prueba la opción de generar reporte de disponibilidad en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 60, in test_reporte_disponibilidad
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reservar_asiento (test_main.TestMain.test_reservar_asiento)
Prueba la opción de reservar asiento en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 33, in test_reservar_asiento
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
ERROR: test_reset_estado (test_main.TestMain.test_reset_estado)
Prueba la opción de resetear estado en el menú principal.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_main.py", line 69, in test_reset_estado
    main()
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opción (1-7): ", int, (1, 7))
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 45, in validar_entrada
    entrada = tipo(input(mensaje))
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1167, in __call__
    return self._mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1171, in _mock_call
    return self._execute_mock_call(*args, **kwargs)
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1228, in _execute_mock_call
    result = next(effect)
StopIteration

======================================================================
FAIL: test_reporte_disponibilidad (test_utilidades.TestUtilidades.test_reporte_disponibilidad)
Prueba la función reporte_disponibilidad.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1423, in patched
    return func(*newargs, **newkeywargs)
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\tests\test_utilidades.py", line 105, in test_reporte_disponibilidad
    mock_print.assert_any_call("Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar")
  File "C:\Users\JimBLogic\AppData\Local\Programs\Python\Python313-32\Lib\unittest\mock.py", line 1048, in assert_any_call
    raise AssertionError(
        '%s call not found' % expected_string
    ) from cause
AssertionError: print('Lunes: 1 asientos sin agregar, 1 asientos disponibles para reservar') call not found

----------------------------------------------------------------------
Ran 41 tests in 0.087s

FAILED (failures=1, errors=6)

2024-12-12 22:24:04,676 - INFO - Revisando debug.log...
2024-12-12 22:24:04,677 - INFO - debug.log no contiene errores inesperados.
2024-12-12 22:24:05,678 - INFO - Ejecutando el programa para pruebas manuales...
Estado de la sala cargado correctamente.
�Bienvenido al Sistema de Reservas para un Cine!
Las filas van del 1 al 10 y los asientos de cada fila van del 1 al 20.
Recuerda que los mi�rcoles hay un 20% de descuento y los mayores de 65 a�os tienen un 30% de descuento adicional.

Opciones:
1. Agregar asiento
2. Reservar asiento
3. Cancelar reserva
4. Mostrar todos los asientos
5. Generar reporte de disponibilidad
6. Resetear estado
7. Salir
Seleccione una opci�n (1-7): Entrada inv�lida. Por favor, ingrese un int v�lido.
Seleccione una opci�n (1-7): Entrada inv�lida. Por favor, ingrese un int v�lido.
Seleccione una opci�n (1-7): Entrada inv�lida. Por favor, ingrese un int v�lido.

2024-12-12 22:31:00,097 - ERROR - El programa encontr� errores:
Traceback (most recent call last):
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 93, in <module>
    main()
    ~~~~^^
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\main.py", line 19, in main
    opcion = validar_entrada("Seleccione una opci�n (1-7): ", int, (1, 7))
             ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Users\JimBLogic\Documents\MY DOCUMENTS\LEARNING\Python & IT\Projects\proyecto\utilidades.py", line 55, in validar_entrada
    raise ValueError("N�mero m�ximo de intentos alcanzado. Por favor, intente de nuevo m�s tarde.")
ValueError: N�mero m�ximo de intentos alcanzado. Por favor, intente de nuevo m�s tarde.

2024-12-12 22:31:01,098 - INFO - Verificaci�n completa.
